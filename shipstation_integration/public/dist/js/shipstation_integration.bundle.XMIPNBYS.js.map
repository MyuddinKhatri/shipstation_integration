{
  "version": 3,
  "sources": ["../../../../../apps/shipstation_integration/shipstation_integration/public/js/shipping.js", "frappe-html:/home/myuddin/Projects/parsimony-v14/apps/shipstation_integration/shipstation_integration/templates/includes/carriers.html"],
  "sourcesContent": ["if (!window.shipping)\n\twindow.shipping = {};\n\n\nshipping.shipstation = (frm) => {\n\tshipping.build_carrier_options(frm);\n\tshipping.add_label_button(frm);\n}\n\nshipping.build_carrier_options = (frm) => {\n\t// since we may only have the Shipstation Store reference, and Frappe doesn't let\n\t// you query child tables from the frontend, making a server call\n\tfrappe.call({\n\t\tmethod: \"shipstation_integration.shipping.get_shipstation_settings\",\n\t\targs: { doc: frm.doc },\n\t\tcallback: (r) => {\n\t\t\tif (r.message) {\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: \"shipstation_integration.shipping.get_carrier_services\",\n\t\t\t\t\targs: { settings: r.message },\n\t\t\t\t\tcallback: (services) => {\n\t\t\t\t\t\tif (services.message) {\n\t\t\t\t\t\t\tshipping.carrier_options = services.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t})\n}\n\nshipping.add_label_button = (frm) => {\n\t$(\".btn\").find(\".fa-tags\").closest(\".btn\").remove();\n\n\tif (frm.doc.docstatus !== 1) return;\n\n\tfrappe.call({\n\t\tmethod: \"shipstation_integration.shipping.get_shipstation_settings\",\n\t\targs: { doc: frm.doc },\n\t\tcallback: (r) => {\n\t\t\tif (r.message) {\n\t\t\t\tfrappe.db.get_value(\"Shipstation Settings\", { name: r.message }, \"enable_label_generation\")\n\t\t\t\t\t.then((settings) => {\n\t\t\t\t\t\tif (settings.message.enable_label_generation) {\n\t\t\t\t\t\t\tfrm.add_custom_button(`<i class=\"fa fa-tags\"></i> Shipping Label`, () => {\n\t\t\t\t\t\t\t\tif (!shipping.carrier_options) {\n\t\t\t\t\t\t\t\t\tfrappe.throw(__(`No carriers found to process labels. Please ensure the current\n\t\t\t\t\t\t\t\t\t\tdocument is connected to Shipstation.`))\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tshipping.dialog(frm);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t}\n\t\t}\n\t})\n}\n\nshipping.dialog = (frm) => {\n\tconst warnings = shipping.get_label_warnings(frm);\n\tconst options = shipping.carrier_options.map(a => a.nickname || a.name).join(\"\\n\");\n\tconst fields = [\n\t\t{ fieldname: \"warnings\", fieldtype: \"HTML\" },\n\t\t{ fieldname: \"sb_label\", fieldtype: \"Section Break\" },\n\t\t{\n\t\t\tfieldname: \"ship_method_type\",\n\t\t\tfieldtype: \"Select\",\n\t\t\tlabel: \"Carrier\",\n\t\t\toptions: options,\n\t\t\tonchange: () => {\n\t\t\t\tconst values = dialog.get_values();\n\t\t\t\tif (values.ship_method_type) {\n\t\t\t\t\tconst carrier = shipping.carrier_options.find(a => ((a.nickname || a.name) === values.ship_method_type));\n\t\t\t\t\tconst packages = carrier.packages.map(a => a.name).join(\"\\n\");\n\t\t\t\t\tdialog.set_df_property(\"package\", \"options\", packages);\n\t\t\t\t\tdialog.set_df_property(\"package\", \"read_only\", 0);\n\t\t\t\t\tconst services = carrier.services.map(a => a.name).join(\"\\n\");\n\t\t\t\t\tdialog.set_df_property(\"service\", \"options\", services);\n\t\t\t\t\tdialog.set_df_property(\"service\", \"read_only\", 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{ fieldname: \"service\", fieldtype: \"Select\", label: \"Service\", read_only: 1 },\n\t\t{ fieldname: \"package\", fieldtype: \"Select\", label: \"Package Type\", read_only: 1 },\n\t\t{ fieldname: \"cb_label\", fieldtype: \"Column Break\" },\n\t\t{ fieldname: \"gross_weight\", fieldtype: \"Float\", label: \"Gross Weight\", description: `Total Net Weight: ${frm.doc.total_net_weight}` },\n\t\t{ fieldname: \"total_packages\", fieldtype: \"Int\", label: \"Total Packages\", description: `Total number of items: ${frm.doc.total_qty}` }\n\t];\n\n\tconst dialog = new frappe.ui.Dialog({\n\t\ttitle: __(\"Create and Attach Shipping Label\"),\n\t\tfields: fields,\n\t\tprimary_action: () => {\n\t\t\tdialog.hide();\n\t\t\tshipping.create_shipping_label(frm, dialog.get_values())\n\t\t}\n\t});\n\n\tdialog.fields_dict.warnings.$wrapper.html(warnings);\n\tdialog.show();\n\tdialog.$wrapper.find(\".modal-dialog\").css(\"width\", \"900px\");\n}\n\nshipping.create_shipping_label = (frm, values) => {\n\tfrappe.call({\n\t\tmethod: \"shipstation_integration.shipping.create_shipping_label\",\n\t\targs: { doc: frm.doc, values: values },\n\t\tfreeze: true,\n\t\tcallback: (r) => {\n\t\t\tif (!r.exc) {\n\t\t\t\tfrm.reload_doc();\n\t\t\t}\n\t\t}\n\t});\n}\n\nshipping.get_label_warnings = (frm) => {\n\treturn frm.doc.customer_address\n\t\t? \"\"\n\t\t: `<p style=\"color: red;\">A customer address is required to create a label.</p>`;\n}", "\n\tfrappe.templates['carriers'] = `<table class=\"table table-hover\">\n  <thead>\n    <tr>\n      <th class=\"col col-md-1\">Name</th>\n      <th class=\"col col-md-1\">Nickname</th>\n      <th class=\"col col-md-1\">Account Number</th>\n      <th class=\"col col-md-1\">Primary</th>\n      <th class=\"col col-md-4\">Services</th>\n      <th class=\"col col-md-4\">Packages</th>\n    </tr>\n  </thead>\n  <tbody>\n    {% for (let carrier of carriers) { %}\n      <tr>\n        <td>{{ carrier.name }}</td>\n        <td>{{ carrier.nickname }}</td>\n        <td>{{ carrier.account_number }}</td>\n        <td>{{ carrier.primary ? \"<b>Primary</b>\" : \"\" }}</td>\n        <td>\n          <ul style=\"list-style-type: none;\">\n            {% for (let service of carrier.services) { %}\n              <li>{{ service.name }}</li>\n            {% } %}\n          </ul>\n        </td>\n        <td>\n          <ul style=\"list-style-type: none;\">\n            {% for (let package of carrier.packages) { %}\n              <li>{{ package.name }}</li>\n            {% } %}\n          </ul>\n        </td>\n      </tr>\n    {% } %}\n  </tbody>\n</table>`;\n"],
  "mappings": "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",
  "names": []
}
